<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java ee on @jeqo</title>
    <link>https://jeqo.github.io/es/tags/java-ee/</link>
    <description>Recent content in java ee on @jeqo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright @jeqo</copyright>
    <lastBuildDate>Fri, 31 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://jeqo.github.io/es/tags/java-ee/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integrar Java EE 7 y Kafka usando Avro y RxJava</title>
      <link>https://jeqo.github.io/es/posts/2015-07-31-java-ee-rxjava-kafka-avro/</link>
      <pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/es/posts/2015-07-31-java-ee-rxjava-kafka-avro/</guid>
      <description>Hace poco decidi probar una rápida implementación entre aplicaciones Java EE y RxJava/Kafka/Avro, para publicar/subscribirse a &amp;ldquo;topic messages&amp;rdquo;.
Puedes ir directamente al código, o revisar el enfoque que apliqué:
  .cls-1 { fill: none; }   hashtag  &amp;nbsp;TL;DR He estado realizando alguna pruebas de concepto con Kafka seducido por los beneficios que propone (rapidez, escalabilidad, y funcionar como una fuente de eventos durable) para implementar una propagación de eventos usando el patrón &amp;ldquo;Publish/Subscribe&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
