<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0">
    <channel>
        <title>Jorge Quilcate Otoya on @jeqo</title>
        <generator uri="https://gohugo.io">Hugo</generator>
        <link>https://jeqo.github.io/es/tags/packer/</link>
        <language>en-us</language>
        <author>Jorge Quilcate Otoya</author>
        
        <updated>Fri, 04 Sep 2015 00:00:00 UTC</updated>
        
        <item>
            <title>Imagen de Oracle SOA Suite 12c en Docker</title>
            <link>https://jeqo.github.io/es/post/2015-09-04-oracle-soa-12c-packer-docker-hub/</link>
            <pubDate>Fri, 04 Sep 2015 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/es/post/2015-09-04-oracle-soa-12c-packer-docker-hub/</guid>
            <description>

&lt;p&gt;Luego de encontrar algunas limitaciones en la construcción de una imagen en
Docker con Oracle SOA Suite 12c instalado usando Dockerfiles (como acceso
a volumenes, tamaño de filesystem por defecto), he investigado como
mejorar este proceso, y he encontrado &lt;a href=&#34;https://packer.io/&#34;&gt;Packer&lt;/a&gt;
(del mismo equipo que creo Vagrant, Hashicorp).&lt;/p&gt;

&lt;p&gt;Para obtener mayor información sobre porqué utilizar Packer en vez de
Dockerfiles, &lt;a href=&#34;http://mmckeen.net/blog/2013/12/27/advanced-docker-provisioning-with-packer/&#34;&gt;ir aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;También he movido el directory &lt;a href=&#34;https://github.com/jeqo/oracle-docker/tree/master/OracleSOA&#34;&gt;OracleSOA&lt;/a&gt;
que cree sobre el repositorio de Oracle Docker &lt;a href=&#34;https://github.com/oracle/docker&#34;&gt;oracle-docker&lt;/a&gt;
hacia un repositorio independiente: &lt;a href=&#34;https://github.com/jeqo/oracle-soa-12c-docker&#34;&gt;github.com/jeqo/oracle-soa-12c-docker&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;mejoras&#34;&gt;Mejoras&lt;/h2&gt;

&lt;p&gt;Basicamente, los scripts de Dockerfile fueron transformados en shell scripts
y son invocados desde Packer en la etapa de provisionamiento&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &amp;quot;provisioners&amp;quot;: [
    {
      &amp;quot;type&amp;quot;: &amp;quot;shell&amp;quot;,
      &amp;quot;scripts&amp;quot;: [
        &amp;quot;scripts/create-user.sh&amp;quot;
      ]
    },
    {
      &amp;quot;type&amp;quot;: &amp;quot;file&amp;quot;,
      &amp;quot;source&amp;quot;: &amp;quot;./files/&amp;quot;,
      &amp;quot;destination&amp;quot;: &amp;quot;/u01/&amp;quot;
    },
    {
      &amp;quot;type&amp;quot;: &amp;quot;shell&amp;quot;,
      &amp;quot;scripts&amp;quot;: [
        &amp;quot;scripts/install-java.sh&amp;quot;
      ],
      &amp;quot;environment_vars&amp;quot;: [
        &amp;quot;JAVA_RPM=/data/{{user `java_rpm`}}&amp;quot;
      ]
    },
    {
      &amp;quot;type&amp;quot;: &amp;quot;shell&amp;quot;,
      &amp;quot;scripts&amp;quot;: [
        &amp;quot;scripts/install-soa.sh&amp;quot;
      ],
      &amp;quot;environment_vars&amp;quot;: [
        &amp;quot;SOA_ZIP=/data/{{user `soa_zip`}}&amp;quot;,
        &amp;quot;SOA_PKG={{user `soa_pkg`}}&amp;quot;,
        &amp;quot;SOA_PKG2={{user `soa_pkg2`}}&amp;quot;,
        &amp;quot;JAVA_HOME=/usr/java/default&amp;quot;,
        &amp;quot;MW_HOME=/u01/oracle/soa&amp;quot;
      ]
    }
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Luego del provisionamiento exitoso, se procesa la imagen para
guardarla en Docker Hub:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &amp;quot;post-processors&amp;quot;: [
    [
      {
        &amp;quot;type&amp;quot;: &amp;quot;docker-tag&amp;quot;,
        &amp;quot;repository&amp;quot;: &amp;quot;jeqo/oracle-soa-12c&amp;quot;,
        &amp;quot;tag&amp;quot;: &amp;quot;12.1.3-dev&amp;quot;
      },
      &amp;quot;docker-push&amp;quot;
    ]
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realmente la configuración en JSON es bastante simple y concreta.&lt;/p&gt;

&lt;p&gt;Una vez que la imagen esta cargada en Docker Hub, se puede utilizar
la herramienta preferida: Docker, Dockerfiles, o Vagrant, para crear un
dominio sobre la imagen creada. &lt;a href=&#34;https://github.com/jeqo/oracle-soa-12c-docker/tree/master/samples/12c-domain&#34;&gt;Ejemplo&lt;/a&gt;
explicado en mi &lt;a href=&#34;http://jeqo.github.io/blog/devops/docker-image-oracle-soa-es/&#34;&gt;post anterior&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
