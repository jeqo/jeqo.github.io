<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sqlite on @jeqo</title>
    <link>https://jeqo.github.io/tags/sqlite/</link>
    <description>Recent content in sqlite on @jeqo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright @jeqo</copyright>
    <lastBuildDate>Sat, 24 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jeqo.github.io/tags/sqlite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ingesting log files to sqlite</title>
      <link>https://jeqo.github.io/notes/2022-09-24-ingest-logs-sqlite/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/notes/2022-09-24-ingest-logs-sqlite/</guid>
      <description>I recently was looking into how to analyze multiple related log files (e.g. application log from multiple instances), and found that sqlite may be enough :)
The first step is ingesting content from log files into sqlite tables. sqlite-utils to the rescue! I was initially happy with having each line as a row and adding full-text support to the log column to query events. However, a Java log may span across multiple lines and the outputs may not be ideal â€” timestamps could be in 1 line, and the stack trace root cause in another one.</description>
    </item>
    
    <item>
      <title>sqlite can be used document and graph database</title>
      <link>https://jeqo.github.io/notes/2022-05-09-sqlite-as-document-and-graph-db/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/notes/2022-05-09-sqlite-as-document-and-graph-db/</guid>
      <description>I found that the use-cases for sqlite keep increasing now the JSON is supported.
This week I found the following presentation: https://www.hytradboi.com/2022/simple-graph-sqlite-as-probably-the-only-graph-database-youll-ever-need Which makes the case for a simple graph schema, and using SQL out-of-the-box functionality to store graphs and execute traversal queries.
This repository is actually based on this one focused on JSON support and document databases: https://dgl.cx/2020/06/sqlite-json-support</description>
    </item>
    
    <item>
      <title>Explore Kafka data with kcat, sqlite, and Datasette</title>
      <link>https://jeqo.github.io/notes/2022-03-10-kcat-end-offset-and-datasette/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/notes/2022-03-10-kcat-end-offset-and-datasette/</guid>
      <description>&lt;p&gt;I have been playing with Datasette and sqlite for a bit, trying to collect and expose data efficiently for others to analyze.
Recently started finding use-cases to get data from Apache Kafka, and expose it quickly to analyze it.
Why not using Datasette?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
