<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zipkin on @jeqo</title><link>https://jeqo.github.io/tags/zipkin/</link><description>Recent content in Zipkin on @jeqo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 19 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jeqo.github.io/tags/zipkin/index.xml" rel="self" type="application/rss+xml"/><item><title>Making sense of Event-Driven Systems @ Oracle Code One 2019</title><link>https://jeqo.github.io/talks/making-sense-event-driven-systems-codeone19/</link><pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate><guid>https://jeqo.github.io/talks/making-sense-event-driven-systems-codeone19/</guid><description>&lt;p>Presented at &lt;a href="https://events.rainfocus.com/widget/oracle/oow19/catalogcodeone19?search=jorge&amp;search.codeonetracks=15560568230440086BEm">Oracle Code One 2019&lt;/a>&lt;/p></description></item><item><title>Making sense of Event-Driven Systems @ Kafka Summit 2019</title><link>https://jeqo.github.io/talks/making-sense-event-driven-dataflows-kafkasummitnyc19/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://jeqo.github.io/talks/making-sense-event-driven-dataflows-kafkasummitnyc19/</guid><description>&lt;p>Presented at &lt;a href="https://kafka-summit.org/sessions/tracing-kafka-based-applications-making-sense-event-driven-dataflows/">Kafka Summit NYC 2019&lt;/a>&lt;/p></description></item><item><title>The Importance of Distributed Tracing for Apache Kafka Based Applications</title><link>https://jeqo.github.io/posts/2019-03-26-importance-of-distributed-tracing-for-apache-kafka-based-applications/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://jeqo.github.io/posts/2019-03-26-importance-of-distributed-tracing-for-apache-kafka-based-applications/</guid><description>Originally posted in Confluent Blog
Apache Kafka® based applications stand out for their ability to decouple producers and consumers using an event log as an intermediate layer.
One result of this is that producers and consumers don’t know about each other, as there is no direct communication between them.
This enables choreographed service collaborations, where many components can subscribe to events stored in the event log and react to them asynchronously.</description></item><item><title>The Importance of Observability for Kafka-based applications with Zipkin @ Oslo Apache Kafka Meetup</title><link>https://jeqo.github.io/talks/the-importance-of-observability-kafkausergroupnorway18/</link><pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate><guid>https://jeqo.github.io/talks/the-importance-of-observability-kafkausergroupnorway18/</guid><description>&lt;p>Presented at &lt;a href="https://www.meetup.com/en-AU/Oslo-Kafka/events/254039906/">Oslo Apache Kafka Meetup&lt;/a>&lt;/p></description></item></channel></rss>