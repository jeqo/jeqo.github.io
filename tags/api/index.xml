<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Api on @jeqo</title><link>https://jeqo.github.io/tags/api/</link><description>Recent content in Api on @jeqo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jeqo.github.io/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Kafka Streams abstracts access to multiple tasks state stores when reading</title><link>https://jeqo.github.io/notes/2022-01-26-kafka-streams-iq-composite/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>https://jeqo.github.io/notes/2022-01-26-kafka-streams-iq-composite/</guid><description>&lt;p>Kafka Streams applications could scale either horizontally (add more instances) or vertically (add more threads).
When scaled vertically, multiple tasks store multiple partitions locally.
An interesting question is whether Kafka Streams gives access when reading (i.e. &lt;a href="https://docs.confluent.io/platform/current/streams/developer-guide/interactive-queries.html">Interactive Queries&lt;/a>) to these stores, and how does it manage to abstract the access to different stores managed by multiple tasks.&lt;/p></description></item></channel></rss>