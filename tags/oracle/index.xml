<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0">
    <channel>
        <title>Jorge Quilcate Otoya on @jeqo</title>
        <generator uri="https://gohugo.io">Hugo</generator>
        <link>https://jeqo.github.io/tags/oracle/</link>
        <language>en-us</language>
        <author>Jorge Quilcate Otoya</author>
        
        <updated>Thu, 26 May 2016 00:00:00 UTC</updated>
        
        <item>
            <title>Speed up your Oracle Database provisioning with Docker and Ansible</title>
            <link>https://jeqo.github.io/post/2016-05-26-speed-up-oracle-database-provisioning-ansible-docker/</link>
            <pubDate>Thu, 26 May 2016 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2016-05-26-speed-up-oracle-database-provisioning-ansible-docker/</guid>
            <description>&lt;p&gt;Warming up before &lt;a href=&#34;http://www.amis-conference.com/Program&#34;&gt;AMIS 25th Conference&lt;/a&gt;
event where I will be presenting with my friend
and colleague Arturo Viveros (@gugalnikov)
&lt;a href=&#34;http://www.amis-conference.com/Session-Catalog#session1168&#34;&gt;about Oracle SOA Suite provisioning&lt;/a&gt;,
I want to share some practices that help us to provide Oracle Database instances
between developers and improve our productivity.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Since I started working with Oracle technologies, almost 7 years ago, provide
Oracle Database instances has been always a &lt;em&gt;not so easy&lt;/em&gt; process. It demands
configuring the operating system with the right packages and kernel params,
then prepare user and groups, and after that install the Database engine.
Once you have your engine installed, you can start creating database instances.&lt;/p&gt;

&lt;p&gt;Now that you have a running Database instance, you are able to
start your database development: creating schemas, running SQL scripts,
and connect your applications to store data.&lt;/p&gt;

&lt;p&gt;So, should I repeat this process on each developer workstation?&lt;/p&gt;

&lt;p&gt;There are several options to improve this process: share one database between
all developers, creating and share a VM image between developers, or
actually use an automation tool like Vagrant and Packer to create images,
or just provide the installation automated a tool like Puppet/Chef.&lt;/p&gt;

&lt;p&gt;I will share how we are doing it now in a current project using Docker
as Container platform, and Ansible as our automation tool.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s get started&amp;hellip;&lt;/p&gt;

&lt;h1 id=&#34;defining-the-process&#34;&gt;Defining the process&lt;/h1&gt;

&lt;p&gt;After several months working with automation tools, I understand a key principle
about automate provisioning: &lt;strong&gt;&amp;ldquo;divide and conquer&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Because provision some type of systems is not always a simple process as:
&lt;em&gt;download, unzip and run&lt;/em&gt;, in some cases you need to define your
provisioning process in steps, so you can define this steps as checkpoints,
and don&amp;rsquo;t get bored re-running process from scratch. I mean: from configuring
your OS for running Oracle Database to actually run your SQL scripts is a
long way right? Even if you automate it or do it manually.&lt;/p&gt;

&lt;p&gt;In this case, as I explained before, we have 3 major steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prepare your OS and install database software&lt;/li&gt;
&lt;li&gt;Create database instance&lt;/li&gt;
&lt;li&gt;Run scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And each step will become a checkpoint, i.e. a Docker image.&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t go into every detail about installing Oracle Database, because there
are plenty information about this. At Sysco, we have developed several
Ansible roles to automate installation and configuration of Oracle software:
&lt;a href=&#34;http://github.com/sysco-middleware&#34;&gt;http://github.com/sysco-middleware&lt;/a&gt;. Therefore, I will cover only how do we
separate this process into steps using Docker and Ansible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you need to check more about how Docker integrates with Ansible,
take a lot to my previous post:
&lt;a href=&#34;http://jeqo.github.io/blog/devops/ansible-agentless-provisioning/&#34;&gt;http://jeqo.github.io/blog/devops/ansible-agentless-provisioning/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;step-1-install-oracle-database&#34;&gt;Step 1: Install Oracle Database&lt;/h1&gt;

&lt;p&gt;Go to the first repository called: docker-image-oracle-database
&lt;a href=&#34;http://github.com/sysco-middleware/docker-image-oracle-database&#34;&gt;http://github.com/sysco-middleware/docker-image-oracle-database&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is how we create an image with Oracle Database 11g (or 12c) installed
using Ansible:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- hosts: 127.0.0.1 &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# &amp;gt;&amp;gt;&amp;gt; (1)&lt;/span&gt;
  connection: local
  vars_files:
    - vars/main.yml
  tasks:
    - name: create container
      docker:
        name: tmp-oracle-database
        image: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;{{&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;base_image&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;}}&amp;quot;&lt;/span&gt;
        command: sleep infinity
        volumes:
          - &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;/installers/oracle/db/11.2/database/11.2.0.4:/srv/files&amp;quot;&lt;/span&gt;
        state: started

    - add_host:
        name: tmp-oracle-database
        groups: docker
        ansible_connection: docker

- hosts: tmp-oracle-database &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# &amp;gt;&amp;gt;&amp;gt; (2)&lt;/span&gt;
  connection: docker
  roles:
    - role: sysco-middleware.oracle-database
      oracle_database_version: 11g
      oracle_database_edition: SE
      oracle_database_installer: /srv/files/database/runInstaller

- hosts: 127.0.0.1 &lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# &amp;gt;&amp;gt;&amp;gt; (3)&lt;/span&gt;
  connection: local
  vars_files:
    - vars/main.yml
  tasks:
    - name: docker commit
      command: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;tmp-oracle-database&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;{{&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;image_name&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;}}:{{&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;}}&amp;quot;&lt;/span&gt;
      with_items: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;{{&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;tags&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;}}&amp;quot;&lt;/span&gt;

    - name: docker kill
      command: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;kill&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;tmp-oracle-database&amp;quot;&lt;/span&gt;

    - name: docker rm
      command: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;rm&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;tmp-oracle-database&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We have 3 main steps here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First we create the containers using a variable that contains the base
image: &amp;ldquo;syscomiddleware/oraclelinux:6.7&amp;rdquo; that is based in Oracle Linux official
image, with some packages installed. And then we add the running docker container
as an Ansible host.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Second, we connect to the running docker container, and run our
Oracle Database role (&lt;a href=&#34;https://github.com/sysco-middleware/ansible-role-oracle-database&#34;&gt;https://github.com/sysco-middleware/ansible-role-oracle-database&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, after installing Oracle database software, I create a checkpoint:
commit container as an image, kill and remove running container, and
optionally (and if you have a private repository) push your image.
(check this issue about sharing
Oracle software inside container images:
&lt;a href=&#34;https://github.com/oracle/docker-images/issues/97)&#34;&gt;https://github.com/oracle/docker-images/issues/97)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To run this process you just need:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ ansible-playbook main.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check that our &amp;ldquo;oracle-database&amp;rdquo; image is created successfully, just run&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ docker images
REPOSITORY                        TAG                    IMAGE ID            CREATED             SIZE
syscomiddleware/oracle-database   oraclelinux-11.2.0.4   15eb5554debd        &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt; hours ago         6.301 GB
syscomiddleware/oracle-database   latest                 ab59ccd81cba        &lt;span style=&#34;color: #666666&#34;&gt;2&lt;/span&gt; hours ago         6.301 GB 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The main goal here is that we have a checkpoint that represents a container
with Database engine installed. This is a unique image that can be reused to
move forward.&lt;/p&gt;

&lt;h1 id=&#34;step-2-create-database-instance&#34;&gt;Step 2: Create database instance&lt;/h1&gt;

&lt;p&gt;Once we have the Oracle Database image, we won&amp;rsquo;t have to reinstall it again! :)
&amp;hellip;as far as we keep using Docker and at least until we find out how to
improve the installation process.&lt;/p&gt;

&lt;p&gt;So, we can move forward from this point up to the next stage: create a database
instance.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s go and checkout this repository:
&lt;a href=&#34;https://github.com/sysco-middleware/docker-image-oracle-database-instance&#34;&gt;https://github.com/sysco-middleware/docker-image-oracle-database-instance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we follow the same approach as previous step: prepare temporal containers,
run Ansible roles and commit image.&lt;/p&gt;

&lt;p&gt;You can check the main.yml file here: &lt;a href=&#34;https://github.com/sysco-middleware/docker-image-oracle-database-instance/blob/master/main.yml&#34;&gt;https://github.com/sysco-middleware/docker-image-oracle-database-instance/blob/master/main.yml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And as you see, we are using another Ansible role called &amp;ldquo;oracle-database-instance&amp;rdquo;
that is used to create an instance and prepare listener:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- hosts: tmp-oracle-db-instance
  connection: docker
  roles:
    - role: sysco-middleware.oracle-database-instance
      oracle_database_version: 11g
      oracle_database_sid: orcl
      oracle_database_global_name: orcl
      oracle_database_template_name: General_Purpose.dbc
      oracle_database_admin_password: welcome1
      oracle_database_auto_memory_mgnt: TRUE
      oracle_database_memory_percentage: 80
      oracle_database_memory_total: 1024
      oracle_database_type: MULTIPURPOSE
      oracle_database_listener_name: LISTENER
      oracle_database_listener_port: 1521
      oracle_database_init_params: JAVA_JIT_ENABLED=FALSE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After running this Ansible playbook, we will have a new image called:
&lt;em&gt;oracle-database-instance&lt;/em&gt; tagged with its corresponding OS and version.&lt;/p&gt;

&lt;p&gt;But this process is a little bit different from previous case:
As you can see in this main.yml file, there is an additional step:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- name: build image
  command: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;-t&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;{{&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;image_name&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;}}&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;docker&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is an important step, because it involves the usage of Dockerfile to
prepare a Docker image.&lt;/p&gt;

&lt;p&gt;To give a small background about this: Docker is prepared to isolate
process and files, and by convention you should run only 1 process by
container. To define this process, you will use a Dockerfile to specify
which command should be run, and this process should persist over time, because
if it ends, your container will be stopped.&lt;/p&gt;

&lt;p&gt;In our case, we need to start our database instance. And to do this we will use a
Dockerfile. But, as you know, we don&amp;rsquo;t have a out-of-the-box script that starts
the instance and keep this process alive and printing logging messages.
But we can create something similar:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #19177C&#34;&gt;LISTENERS_ORA&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;$ORACLE_HOME/network/admin/listener.ora

cp &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;LISTENERS_ORA&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;.tmpl&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;$&lt;span style=&#34;color: #BA2121&#34;&gt;LISTENERS_ORA&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
sed -i &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;s/%hostname%/&lt;/span&gt;$&lt;span style=&#34;color: #BA2121&#34;&gt;HOSTNAME/g&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;LISTENERS_ORA&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
sed -i &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;s/%port%/1521/g&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;LISTENERS_ORA&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
bin/lsnrctl start &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
bin/dbstart $ORACLE_HOME
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Thanks to GitHub user &amp;ldquo;wnameless&amp;rdquo; that share how to do this in its Docke Image
for Oracle XE: &lt;a href=&#34;https://github.com/wnameless/docker-oracle-xe-11g&#34;&gt;https://github.com/wnameless/docker-oracle-xe-11g&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, we not only start and read a log file, but update our listener file. Why?
Because, also by convention, every time a container starts, container&amp;rsquo;s hostname
gets updated.
So, to keep our database instance consistent, we have to update our listener.ora accordingly.&lt;/p&gt;

&lt;p&gt;Here is our Dockerfile:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;FROM tmp&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;oracle&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;db&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;instance

MAINTAINER Jorge Quilcate &amp;lt;jorge.quilcate&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;@&lt;/span&gt;sysco.no&amp;gt;

USER oracle

ENV ORACLE_HOME &lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;home&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;oracle&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;product&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;oracle_home
ENV ORACLE_SID orcl

WORKDIR &lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;$&lt;/span&gt;ORACLE_HOME

ADD listener.ora.tmpl network&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;admin&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;listener.ora.tmpl
ADD startup.sh .

CMD sh startup.sh &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tail &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;f startup.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, I start the process and tail the startup log file to keep our
container running.&lt;/p&gt;

&lt;p&gt;And each time we want to run this image, this process will be executed, unless
you override it in your &lt;em&gt;&amp;ldquo;docker run&amp;rdquo;&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;You can test this image by running:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ docker run -it syscomiddleware/oracle-database-instance:oraclelinux-11.2.0.4 
LSNRCTL &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; Linux: Version 11.2.0.4.0 - Production on 25-MAY-2016 17:00:37

Copyright &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; 1991, 2013, Oracle.  All rights reserved.

Starting /home/oracle/product/oracle_home/bin/tnslsnr: please wait...

TNSLSNR &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; Linux: Version 11.2.0.4.0 - Production
System parameter file is /home/oracle/product/oracle_home/network/admin/listener.ora
Log messages written to /home/oracle/product/diag/tnslsnr/02b9ae1e3ab1/listener/alert/log.xml
Listening on: &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;DESCRIPTION&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;ADDRESS&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PROTOCOL&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;ipc&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;EXTPROC1521&lt;span style=&#34;color: #666666&#34;&gt;)))&lt;/span&gt;
Listening on: &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;DESCRIPTION&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;ADDRESS&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PROTOCOL&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;tcp&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;02b9ae1e3ab1&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PORT&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;1521&lt;span style=&#34;color: #666666&#34;&gt;)))&lt;/span&gt;

Connecting to &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;DESCRIPTION&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;ADDRESS&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PROTOCOL&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;IPC&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;EXTPROC1521&lt;span style=&#34;color: #666666&#34;&gt;)))&lt;/span&gt;
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; Linux: Version 11.2.0.4.0 - Production
Start Date                25-MAY-2016 17:00:42
Uptime                    &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt; days &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt; hr. &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt; min. &lt;span style=&#34;color: #666666&#34;&gt;3&lt;/span&gt; sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Listener Parameter File   /home/oracle/product/oracle_home/network/admin/listener.ora
Listener Log File         /home/oracle/product/diag/tnslsnr/02b9ae1e3ab1/listener/alert/log.xml
Listening Endpoints Summary...
  &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;DESCRIPTION&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;ADDRESS&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PROTOCOL&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;ipc&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;EXTPROC1521&lt;span style=&#34;color: #666666&#34;&gt;)))&lt;/span&gt;
  &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;DESCRIPTION&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;ADDRESS&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PROTOCOL&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;tcp&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;02b9ae1e3ab1&lt;span style=&#34;color: #666666&#34;&gt;)(&lt;/span&gt;&lt;span style=&#34;color: #19177C&#34;&gt;PORT&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;1521&lt;span style=&#34;color: #666666&#34;&gt;)))&lt;/span&gt;
The listener supports no services
The &lt;span style=&#34;color: #008000&#34;&gt;command&lt;/span&gt; completed successfully
Processing Database instance &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;orcl&amp;quot;&lt;/span&gt;: log file /home/oracle/product/oracle_home/startup.log
Total System Global Area  &lt;span style=&#34;color: #666666&#34;&gt;801701888&lt;/span&gt; bytes
Fixed Size		    &lt;span style=&#34;color: #666666&#34;&gt;2257520&lt;/span&gt; bytes
Variable Size		  &lt;span style=&#34;color: #666666&#34;&gt;276827536&lt;/span&gt; bytes
Database Buffers	  &lt;span style=&#34;color: #666666&#34;&gt;515899392&lt;/span&gt; bytes
Redo Buffers		    &lt;span style=&#34;color: #666666&#34;&gt;6717440&lt;/span&gt; bytes
Database mounted.
Database opened.
SQL&amp;gt; Disconnected from Oracle Database 11g Release 11.2.0.4.0 - 64bit Production

bin/dbstart: Database instance &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;orcl&amp;quot;&lt;/span&gt; warm started.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From other terminal you can check container name and inspect for its IP address:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ docker ps
CONTAINER ID        IMAGE                                      COMMAND                  CREATED              STATUS              PORTS               NAMES
21713e2f2c59        syscomiddleware/oracle-database-instance   &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;/bin/sh -c &amp;#39;sh start&amp;quot;&lt;/span&gt;   About a minute ago   Up About a minute                       adoring_yalow
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take a minute to understand the process: We will have images by steps
from our provisioning process, and each step can be tagged by version and OS
(and any other relevant information). This will create a group of images that
will be reusable, and if we have issues, we can identify and solve specific
tasks, instead of re-run everything from scratch.&lt;/p&gt;

&lt;p&gt;As learning any other technology, this will take some time at the beginning
of the process, but as we understand and collaborate to improve this images,
it will worth our effort.&lt;/p&gt;

&lt;p&gt;First, you can see that a container name is assigned randomly: &amp;ldquo;adoring_yalow&amp;rdquo;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ docker inspect adoring_yalow
...
&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Networks&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;bridge&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IPAMConfig&amp;quot;&lt;/span&gt;: null,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Links&amp;quot;&lt;/span&gt;: null,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Aliases&amp;quot;&lt;/span&gt;: null,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;NetworkID&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;c72c01d764b3aa7f30ffa220ed91a15aa1bb2f7c3396008601cc0137512612cb&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;EndpointID&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;ea1e3277916bcebaa6fbba42ab6cdea6ebd597a2ce20c274b415f4ad89f05bee&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Gateway&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;172.17.0.1&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IPAddress&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;172.17.0.2&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IPPrefixLen&amp;quot;&lt;/span&gt;: 16,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IPv6Gateway&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;GlobalIPv6Address&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;GlobalIPv6PrefixLen&amp;quot;&lt;/span&gt;: 0,
                    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;MacAddress&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;02:42:ac:11:00:02&amp;quot;&lt;/span&gt;
                &lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And test to connect from your favorite IDE using a JDBC URL like:&lt;/p&gt;

&lt;p&gt;jdbc:oracle:thin:@172.17.0.2:1521:orcl&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeqo.github.io/images/2016-05-24-speed-up-oracle-database-provisioning-ansible-docker/jdbc-test.png&#34; alt=&#34;NetBeans JDBC Connection&#34; title=&#34;NetBeans JDBC Connection&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-3-run-sql-scripts&#34;&gt;Step 3: Run SQL scripts&lt;/h1&gt;

&lt;p&gt;This is a more &amp;ldquo;custom&amp;rdquo; step as you can use now use this images for different
purposes (e.g: create a schema, run SQL scripts, add more configurations, or
if you are working with Fusion Middleware products, you can create RCU schemas).&lt;/p&gt;

&lt;p&gt;Depending on your use-case it will be easier, or more efective, to use
Dockerfile than Ansible playbooks.&lt;/p&gt;

&lt;p&gt;In this case, I will show you how to create an schema to start your Java
application development, for instance.&lt;/p&gt;

&lt;p&gt;I will recommend you to use Docker Compose (&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;https://docs.docker.com/compose/&lt;/a&gt;)
just to simplify the execution of Docker command, and link containers together.&lt;/p&gt;

&lt;p&gt;I have created a repository (&lt;a href=&#34;https://github.com/jeqo/post-oracle-database-docker&#34;&gt;https://github.com/jeqo/post-oracle-database-docker&lt;/a&gt;)
to host this sample.&lt;/p&gt;

&lt;p&gt;You can check that there is a directory called &amp;ldquo;sample&amp;rdquo; that will be assumed as
the &lt;em&gt;project name&lt;/em&gt; by Docker Compose.&lt;/p&gt;

&lt;p&gt;Inside is a file called &amp;ldquo;docker-compose.yml&amp;rdquo; that defines &lt;em&gt;container services&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;version: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;
services:
  db:
    build: db
    ports:
      - &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;10521:1521&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this case, it defines a service (a container), that will be built from
a Dockerfile inside a &amp;ldquo;db&amp;rdquo; directory, and will forward its 1521 port
to your hosts port 10521, so you can use it from a local application.&lt;/p&gt;

&lt;p&gt;This Dockerfile contains instructions to create an schema called &amp;ldquo;test&amp;rdquo;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;FROM syscomiddleware&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;oracle&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;database&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;instance:oraclelinux&lt;span style=&#34;color: #666666&#34;&gt;-11.2.0.4&lt;/span&gt;

MAINTAINER Jorge Quilcate &amp;lt;jorge.quilcate&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;@&lt;/span&gt;sysco.no&amp;gt;

ADD create&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;schema.sql .

RUN sh startup.sh &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    while ! grep &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;bin/dbstart: Database instance \&amp;quot;orcl\&amp;quot; warm started.&amp;quot;&lt;/span&gt; startup.log; do sleep &lt;span style=&#34;color: #666666&#34;&gt;10&lt;/span&gt;; done &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    echo exit | bin&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;sqlplus system&lt;span style=&#34;color: #666666&#34;&gt;/&lt;/span&gt;welcome1 &lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;@&lt;/span&gt;create&lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;schema.sql

CMD sh startup.sh &lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    tail &lt;span style=&#34;color: #666666&#34;&gt;-&lt;/span&gt;f startup.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, just execute &amp;ldquo;docker-compose up -d&amp;rdquo; and this container will be built and
started.&lt;/p&gt;

&lt;p&gt;To check its execution, run &amp;ldquo;docker-compose logs -f&amp;rdquo; and that&amp;rsquo;s it.&lt;/p&gt;

&lt;p&gt;You can customize your Docker Compose file, or just start building more layers on
top of the database instance image.&lt;/p&gt;

&lt;p&gt;At AMIS25, we will show how to use this instance to build a SOA Suite database
and then provide customs SOA Suite Domains, but also show different experiences
with different &amp;ldquo;DevOps&amp;rdquo; technologies. Hope to see you there!&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Oracle SOA Suite 12c Docker Image</title>
            <link>https://jeqo.github.io/post/2015-09-04-oracle-soa-12c-packer-docker-hub/</link>
            <pubDate>Fri, 04 Sep 2015 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2015-09-04-oracle-soa-12c-packer-docker-hub/</guid>
            <description>&lt;p&gt;After find some limitations on building SOA Docker image using Dockerfile
(as volume access, default size image) I researched on how to improve
building process and I found &lt;a href=&#34;https://packer.io/&#34;&gt;Packer&lt;/a&gt;
(from the same guy that creates Vagrant).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;To check why using Packer instead of Dockerfiles, &lt;a href=&#34;http://mmckeen.net/blog/2013/12/27/advanced-docker-provisioning-with-packer/&#34;&gt;go here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also moved &lt;a href=&#34;https://github.com/jeqo/oracle-docker/tree/master/OracleSOA&#34;&gt;OracleSOA directory&lt;/a&gt;
from my forked &lt;a href=&#34;https://github.com/oracle/docker&#34;&gt;oracle-docker repository&lt;/a&gt; to
an independent repository: &lt;a href=&#34;https://github.com/jeqo/oracle-soa-12c-docker&#34;&gt;github.com/jeqo/oracle-soa-12c-docker&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;improvements&#34;&gt;Improvements&lt;/h2&gt;

&lt;p&gt;Basically Dockerfile scripts were moved to shell scripts and are called
from Packer.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;provisioners&amp;quot;&lt;/span&gt;&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;:&lt;/span&gt; [
    {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;scripts/create-user.sh&amp;quot;&lt;/span&gt;
      ]
    },
    {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;./files/&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;destination&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;/u01/&amp;quot;&lt;/span&gt;
    },
    {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;scripts/install-java.sh&amp;quot;&lt;/span&gt;
      ],
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;environment_vars&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;JAVA_RPM=/data/{{user `java_rpm`}}&amp;quot;&lt;/span&gt;
      ]
    },
    {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;scripts/install-soa.sh&amp;quot;&lt;/span&gt;
      ],
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;environment_vars&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SOA_ZIP=/data/{{user `soa_zip`}}&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SOA_PKG={{user `soa_pkg`}}&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SOA_PKG2={{user `soa_pkg2`}}&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;JAVA_HOME=/usr/java/default&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;MW_HOME=/u01/oracle/soa&amp;quot;&lt;/span&gt;
      ]
    }
  ]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After provisioning, you can save your image, and if
you want push it to Docker Hub:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;post-processors&amp;quot;&lt;/span&gt;&lt;span style=&#34;border: 1px solid #FF0000&#34;&gt;:&lt;/span&gt; [
    [
      {
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker-tag&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;repository&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;jeqo/oracle-soa-12c&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;12.1.3-dev&amp;quot;&lt;/span&gt;
      },
      &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;docker-push&amp;quot;&lt;/span&gt;
    ]
  ]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Very simple and straightforward JSON configuration.&lt;/p&gt;

&lt;p&gt;Now you have a Docker image with SOA installer, ready
to create your domain as &lt;a href=&#34;https://github.com/jeqo/oracle-soa-12c-docker/tree/master/samples/12c-domain&#34;&gt;this sample&lt;/a&gt; explained
on &lt;a href=&#34;http://jeqo.github.io/blog/devops/docker-image-oracle-soa/&#34;&gt;my previous post&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Oracle Fusion Middleware Chef Cookbook - New Release!</title>
            <link>https://jeqo.github.io/post/2015-07-21-chef-cookbook-oracle-fmw-0-2-0/</link>
            <pubDate>Tue, 21 Jul 2015 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2015-07-21-chef-cookbook-oracle-fmw-0-2-0/</guid>
            <description>&lt;p&gt;Yesterday, I released a new version (0.2.0) of my Oracle Fusion Middleware Cookbook
hosted on &lt;a href=&#34;https://supermarket.chef.io/cookbooks/oracle-fmw&#34;&gt;Chef Supermarket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This new release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for Oracle SOA Suite 12c Quickstart installation&lt;/li&gt;
&lt;li&gt;Support for Oracle SOA/OSB Suite 11g installation and domain creation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can found usage examples on my Chef repository on GitHub: &lt;a href=&#34;https://github.com/jeqo/chef-repo&#34;&gt;https://github.com/jeqo/chef-repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking forward for your comments, and happy cooking!&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Docker image for Oracle SOA Suite 12c</title>
            <link>https://jeqo.github.io/post/2015-04-01-docker-image-oracle-soa/</link>
            <pubDate>Wed, 01 Apr 2015 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2015-04-01-docker-image-oracle-soa/</guid>
            <description>&lt;p&gt;Cool news came from Oracle a couple of weeks ago: &lt;a href=&#34;https://blogs.oracle.com/WebLogicServer/entry/oracle_weblogic_server_now_running&#34;&gt;Oracle WebLogic Server is now supported on Docker!&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;es&#34;&gt;&lt;p&gt;I&amp;#39;m glad we announced support for &lt;a href=&#34;https://twitter.com/OracleWebLogic&#34;&gt;@OracleWebLogic&lt;/a&gt; on &lt;a href=&#34;https://twitter.com/docker&#34;&gt;@Docker&lt;/a&gt; last week, not today :-) &lt;a href=&#34;https://t.co/6E9UxrgY3n&#34;&gt;https://t.co/6E9UxrgY3n&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bruno Borges  (@brunoborges) &lt;a href=&#34;https://twitter.com/brunoborges/status/583252433343758336&#34;&gt;abril 1, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;This is very cool. &lt;strong&gt;Docker&lt;/strong&gt; is a disruptive platform that ship everything inside a container (OS, Configurations, Platform, Application) and let you run it (almost) everywhere! To &lt;a href=&#34;https://www.docker.com/whatisdocker/&#34;&gt;learn more about Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, WebLogic on Docker is great, but I&amp;rsquo;d like to go further and &lt;em&gt;Dockerize&lt;/em&gt; &lt;strong&gt;SOA&lt;/strong&gt; and &lt;strong&gt;BPM&lt;/strong&gt; products (as &lt;a href=&#34;https://guidoschmutz.wordpress.com/2015/03/29/installing-oracle-stream-explorer-in-a-docker-image/&#34;&gt;Guido Schmitz made with Oracle Stream Explorer&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;es&#34;&gt;&lt;p&gt;Just published my latest blog “Providing Oracle Stream Explorer environment using Docker”. &lt;a href=&#34;https://twitter.com/hashtag/oracle?src=hash&#34;&gt;#oracle&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/StreamExplorer?src=hash&#34;&gt;#StreamExplorer&lt;/a&gt; &lt;a href=&#34;http://t.co/WNFGCmFVca&#34;&gt;http://t.co/WNFGCmFVca&lt;/a&gt;&lt;/p&gt;&amp;mdash; gschmutz (@gschmutz) &lt;a href=&#34;https://twitter.com/gschmutz/status/582232826772357120&#34;&gt;marzo 29, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&#34;http://github.com/oracle/docker&#34;&gt;Oracle&amp;rsquo;s Docker repository&lt;/a&gt; as a base to create a Oracle SOA Suite 12c image (with the product installed - no domain included), and a sample Docker configuration to create a Docker image with a domain with SOA and OSB.&lt;/p&gt;

&lt;h2 id=&#34;get-the-repository&#34;&gt;Get the repository&lt;/h2&gt;

&lt;p&gt;To try this post you should have &lt;a href=&#34;https://docs.docker.com/&#34;&gt;a machine with Docker installed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started you can download the repository: &lt;a href=&#34;http://github.com/jeqo/oracle-docker&#34;&gt;http://github.com/jeqo/oracle-docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The repository includes images for MySQL, WebLogic and Coherence. These images comes from Oracle repository.&lt;/p&gt;

&lt;p&gt;My contribution is into the &lt;a href=&#34;https://github.com/jeqo/oracle-docker/tree/master/OracleSOA&#34;&gt;&amp;lsquo;OracleSOA&amp;rsquo; directory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to fork and create &amp;ldquo;pull-requests&amp;rdquo;!&lt;/p&gt;

&lt;h2 id=&#34;creating-the-soa-suite-12c-image&#34;&gt;Creating the SOA Suite 12c image&lt;/h2&gt;

&lt;p&gt;Now you should &lt;a href=&#34;http://www.oracle.com/technetwork/middleware/soasuite/downloads/index.html&#34;&gt;download Oracle SOA Suite 12c Quick Start installer&lt;/a&gt;, and put it into OracleSOA/dockerfiles/12.1.3. Also, you should &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html&#34;&gt;download Java Development Kit 7&lt;/a&gt;, and put it in the same folder.&lt;/p&gt;

&lt;p&gt;Open a terminal into &lt;em&gt;OracleSOA&lt;/em&gt; directory, go to dockerfiles, run the script &lt;em&gt;buildDockerImage.sh&lt;/em&gt; with the &lt;em&gt;-d&lt;/em&gt; argument because we are installing the Quick Start version of SOA Suite 12c:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;sh buildDockerImage.sh -d
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This creates a Docker image called: &lt;strong&gt;oracle/soa:12.1.3-dev&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;dockerize-a-soa-suite-domain&#34;&gt;Dockerize a SOA Suite Domain&lt;/h2&gt;

&lt;p&gt;So, now we have a Docker image with Oracle SOA Suite 12c installed. What we can do now is create a domain with WLST.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s what I did, and I add it to the &lt;em&gt;OracleSOA/samples&lt;/em&gt; directory.&lt;/p&gt;

&lt;p&gt;To run it, go to the &lt;em&gt;OracleSOA/samples/12c-domain&lt;/em&gt; and run the following commands:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;docker build -t mysoa .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And this should create an image called &lt;em&gt;mysoa&lt;/em&gt; that contains a Compact Domain into this directory: &lt;em&gt;/u01/oracle/work/domains/soa-domain&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it! When you want to run a SOA Suite 12c Domain, just run:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;docker run -i -t mysoa
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;next-steps&#34;&gt;Next steps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;BPM on Docker&lt;/li&gt;
&lt;li&gt;Publish images on Docker Hub Registry&lt;/li&gt;
&lt;li&gt;Extended Domain on Docker: Use an external Oracle Database for Oracle SOA/BPM Schemas&lt;/li&gt;
&lt;li&gt;SOA/BPM Cluster on Docker containers&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
        <item>
            <title>Running Oracle BPM 12c on AWS using Vagrant and Chef</title>
            <link>https://jeqo.github.io/post/2014-12-11-run-bpm-12c-aws/</link>
            <pubDate>Thu, 11 Dec 2014 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2014-12-11-run-bpm-12c-aws/</guid>
            <description>&lt;p&gt;In this post, I will show how to create an AWS EC2 Instance with an Oracle BPM 12c Quickstart Domain created. And I will use previous post for related tasks.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Lets see how to achieve this and make this process reusable. These are the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an AWS EC2 instance (with Vagrant)&lt;/li&gt;
&lt;li&gt;Connect to an NFS instance to get the installer (with Chef)&lt;/li&gt;
&lt;li&gt;Install Oracle BPM 12c Quickstart and create a Domain (with Chef)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub repository: &lt;a href=&#34;https://github.com/jeqo/oracle-bpm-12c-aws&#34;&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-an-aws-ec2-instance&#34;&gt;Create an AWS EC2 instance&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve created a Red Hat instance using Vagrant. This instance should be connected to my NFS instance that has all the Oracle&amp;rsquo;s installers (to create an NFS instance on AWS EC2: &lt;a href=&#34;http://jeqo.github.io/blog/devops/create-nfs-instance-aws/&#34;&gt;go here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This is the NFS instance:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeqo.github.io/images/2014-12-11-run-bpm-12c-aws/2014-12-11_0836.png&#34; alt=&#34;NFS instance&#34; title=&#34;NFS Instance&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And the &amp;ldquo;/data&amp;rdquo; directory is shared. It includes Oracle XE and Oracle FMW installers:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeqo.github.io/images/2014-12-11-run-bpm-12c-aws/2014-12-11_0841.png&#34; alt=&#34;NFS directories&#34; title=&#34;NFS directories&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;vagrant-configuration&#34;&gt;Vagrant configuration&lt;/h3&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #880000&#34;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #880000&#34;&gt;Vagrant&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;configure(&lt;span style=&#34;color: #880000&#34;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;) &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;config&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# Load properties files&lt;/span&gt;
	box_props &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;YAML&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;load_file(&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;box.properties&amp;quot;&lt;/span&gt;)
	aws_props &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;YAML&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;load_file(&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;aws.properties&amp;quot;&lt;/span&gt;)

	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# Basic metadata&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;box &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;box_url &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;file://&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;base_location&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;

	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# AWS Configuration&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;provider &lt;span style=&#34;color: #19177C&#34;&gt;:aws&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;aws, override&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;access_key_id &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;aws_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;access_key_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;secret_access_key &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;aws_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;secret_access_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;keypair_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;jeqo&amp;quot;&lt;/span&gt;

		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;instance_type &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;m3.medium&amp;quot;&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;region &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;sa-east-1&amp;quot;&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;availability_zone &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;sa-east-1a&amp;quot;&lt;/span&gt;
		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;ami &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;ami-0511a418&amp;quot;&lt;/span&gt;

		override&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;ssh&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;username &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;ec2-user&amp;quot;&lt;/span&gt;
		override&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;ssh&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;private_key_path &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;aws_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;key_pair_location&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;

		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;tags &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {
		  &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;
		}

		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;block_device_mapping &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;{
			&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;DeviceName&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;/dev/sda1&amp;#39;&lt;/span&gt;,
			&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;Ebs.VolumeSize&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;disk_size&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;
		}&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;

		aws&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;security_groups &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;jeqo-group&amp;quot;&lt;/span&gt;

		config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;ssh&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;pty &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;end&lt;/span&gt;

	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# Install Chef Client&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;omnibus&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;chef_version &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #19177C&#34;&gt;:latest&lt;/span&gt;

	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# Increase Swap size&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;s&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
		s&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;path	&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;increase_swap.sh&amp;quot;&lt;/span&gt;
		s&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;args   &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;additional_swap&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;end&lt;/span&gt;

	&lt;span style=&#34;color: #408080; font-style: italic&#34;&gt;# Run Provisioning with Chef&lt;/span&gt;
	config&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;chef_client&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;chef&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;chef_server_url &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;https://api.opscode.com/organizations/jeqo&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;validation_client_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;jeqo-validator&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;validation_key_path &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;chef&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;repo_location&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;/.chef/jeqo-validator.pem&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;node_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;#{&lt;/span&gt;box_props&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #BB6688; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;add_role &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;add_role &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;oracle_db-xe&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;add_role &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;demo-bpm_bam-12c&amp;quot;&lt;/span&gt;
		chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {
			&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; {
				&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;server-host&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;
			},
			&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;oracle-xe&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; {
				&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;file:///data/oracle-xe/oracle-xe-11.2.0-1.0.x86_64.rpm&amp;quot;&lt;/span&gt;
			},
			&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;bpm_qs-12c&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; {
				&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;file:///data/oracle-fmw/bpm_qs-12c/fmw_12.1.3.0.0_bpmqs_Disk1_1of1.zip&amp;quot;&lt;/span&gt;
			}
		}
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running this file with:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;vagrant up --provider&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;aws
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;You will create a new instance on AWS EC2.&lt;/p&gt;

&lt;h2 id=&#34;connect-to-an-nfs-instance&#34;&gt;Connect to an NFS instance&lt;/h2&gt;

&lt;p&gt;The first recipe that will be executed is:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
  chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;add_role &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This call the following Chef role:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt;,
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Role applied to the system that should be an NFS client tools.&amp;quot;&lt;/span&gt;,
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;json_class&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Chef::Role&amp;quot;&lt;/span&gt;,
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;default_attributes&amp;quot;&lt;/span&gt; : {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt; : {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;server-host&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;local-directory&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;/data&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;remote-directory&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;/data&amp;quot;&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt; : [
    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;recipe[nfs-utils::nfs-client]&amp;quot;&lt;/span&gt;
  ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To update the server-host from your Vagrant configuration, add these lines:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
chef&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;nfs-client&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;server-host&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;123.1.1.12&amp;quot;&lt;/span&gt;
  },
  &lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And when your instance started, a new directory &amp;ldquo;/data&amp;rdquo; will sync the NFS shared directories.&lt;/p&gt;

&lt;h2 id=&#34;install-oracle-bpm-12c-quickstart&#34;&gt;Install Oracle BPM 12c Quickstart&lt;/h2&gt;

&lt;p&gt;To install BPM, you can download my shared &lt;a href=&#34;https://supermarket.chef.io/cookbooks/oracle-fmw&#34;&gt;&amp;ldquo;oracle-fmw&amp;rdquo; cookbook&lt;/a&gt; from Chef Supermarket. It is explained in &lt;a href=&#34;http://jeqo.github.io/blog/devops/chef-cookbook-oracle-fmw-12c/&#34;&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vagrant configuration calls this Chef role:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;{
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;demo-bpm_bam-12c&amp;quot;&lt;/span&gt;,
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;json_class&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Chef::Role&amp;quot;&lt;/span&gt;,
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;default_attributes&amp;quot;&lt;/span&gt; : {
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;domain-12c&amp;quot;&lt;/span&gt;: {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;demo-bpm_bam-domain&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Compact&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;: [
        {&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SOA&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;true&lt;/span&gt;},
        {&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;BPM&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;true&lt;/span&gt;},
        {&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;BAM&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;true&lt;/span&gt;},
        {&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;OSB&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;false&lt;/span&gt;}
      ],
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;machines&amp;quot;&lt;/span&gt;: [
      ],
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;admin_server&amp;quot;&lt;/span&gt;: {
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;base_name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;AdminServer&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;new_name&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;bpm_bpm-server&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;port&amp;quot;&lt;/span&gt; : &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;7001&amp;quot;&lt;/span&gt;
      },
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;managed_servers&amp;quot;&lt;/span&gt;: [
      ],
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_repo_host&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_repo_port&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;1521&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_repo_sid&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;xe&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_repo_prefix&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;DEMO&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_repo_password&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;welcome1&amp;quot;&lt;/span&gt;
    },
    &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;rcu-12c&amp;quot;&lt;/span&gt;: {
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_schema_prefix&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;DEMO&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_dba_user&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SYS&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_dba_role&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SYSDBA&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_dba_password&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;welcome1&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_schemas_password&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;welcome1&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_hostname&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_port&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;1521&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;db_service&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;xe&amp;quot;&lt;/span&gt;,
      &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;components&amp;quot;&lt;/span&gt;: [
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;SOAINFRA&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;OPSS&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IAU&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;MDS&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;WLS&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;UCSUMS&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IAU_APPEND&amp;quot;&lt;/span&gt;,
        &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;IAU_VIEWER&amp;quot;&lt;/span&gt;
      ]
    }
  },
  &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt; : [
    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;recipe[oracle-fmw::install-bpm_qs-12c]&amp;quot;&lt;/span&gt;,
    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;recipe[oracle-fmw::create-rcu_repository-12c]&amp;quot;&lt;/span&gt;,
    &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;recipe[oracle-fmw::create-domain-12c]&amp;quot;&lt;/span&gt;
  ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This includes will run three recipes: &amp;ldquo;install-bpm_qs-12c&amp;rdquo; , &amp;ldquo;create-rcu_repository-12c&amp;rdquo;, &amp;ldquo;create-domain-12c&amp;rdquo;. And includes Domain information (&amp;ldquo;domain-12c&amp;rdquo;), and RCU info (&amp;ldquo;rcu-12c&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;These process takes 30 min. approx. And now we can login with &amp;ldquo;oracle-fmw&amp;rdquo; user (password: welcome1), and start the server:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeqo.github.io/images/2014-12-11-run-bpm-12c-aws/2014-12-11_0930.png&#34; alt=&#34;Start server&#34; title=&#34;Stating WebLogic Server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeqo.github.io/images/2014-12-11-run-bpm-12c-aws/2014-12-11_0931.png&#34; alt=&#34;Server started&#34; title=&#34;WebLogic Server with BPM started&#34; /&gt;&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Chef Cookbook for Oracle Fusion Middleware 12c</title>
            <link>https://jeqo.github.io/post/2014-12-09-chef-cookbook-oracle-fmw-12c/</link>
            <pubDate>Tue, 09 Dec 2014 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2014-12-09-chef-cookbook-oracle-fmw-12c/</guid>
            <description>&lt;p&gt;Provisioning tools have change the way we create software environments: How much time we spend installing OS, databases, configuring platforms, applications? Now you can translate this steps into code, getting the software development benefits and challenges into infrastructure: versioning, reuse, continuous improvement.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will show you how to provision Oracle SOA Suite 12c using a Chef cookbook that I created and shared it on &lt;a href=&#34;http://supermarket.chef.io&#34;&gt;Chef Supermarket&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;provisioning-with-chef&#34;&gt;Provisioning with Chef&lt;/h2&gt;

&lt;p&gt;Chef is a provisioning tool, based on Ruby. Let you organize your &amp;ldquo;infrastructure&amp;rdquo; recipes on &lt;em&gt;Cookbooks&lt;/em&gt;. Here you can find the &lt;a href=&#34;https://supermarket.chef.io&#34;&gt;Chef Supermarket&lt;/a&gt;. For a Chef tutorial &lt;a href=&#34;http://learn.chef.io/&#34;&gt;go here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;chef-cookbooks-and-recipes&#34;&gt;Chef Cookbooks and Recipes&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Chef Cookbooks&lt;/strong&gt; are groups of &lt;strong&gt;Recipes&lt;/strong&gt;, and a &lt;strong&gt;Recipe&lt;/strong&gt; is a sequence of instructions called &lt;strong&gt;Resources&lt;/strong&gt;. &lt;em&gt;Directory, Execute, Service, Package&lt;/em&gt; are some resources.&lt;/p&gt;

&lt;p&gt;For instance: If you want to install an HTTP Server, first you should install a &lt;em&gt;Package&lt;/em&gt;, and then start HTTP &lt;em&gt;Service&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;oracle-fusion-middleware-cookbook&#34;&gt;Oracle Fusion Middleware Cookbook&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve created this cookbook: &lt;a href=&#34;https://supermarket.chef.io/cookbooks/oracle-fmw&#34;&gt;oracle-fmw&lt;/a&gt;. The idea is to have a group of recipes to provide Fusion Middleware environments with different products like: SOA, BPM, BAM, OSB, and so on.&lt;/p&gt;

&lt;p&gt;In the first release, this cookbook includes the following recipes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;prepare-infrastructure-12c&lt;/strong&gt;: Creates the required OS user and group, installs the required OS packages and execute some scripts to set required parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;install-bpm_qs-12c&lt;/strong&gt;: Installs Oracle BPM 12c which includes the following products (12.1.3): JDeveloper, Oracle SOA, Oracle OSB, Oracle BAM, Oracle BAM and others.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;create-rcu_repository-12c&lt;/strong&gt;: Creates RCU repositories on Oracle Database instance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;create-domain-12c&lt;/strong&gt;: Creates a WebLogic Domain with these (optional) products: SOA, BAM, BPM, OSB.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a following post I will show you how to use this cookbook. In the mind time you can download it, use it and improve it from &lt;a href=&#34;https://supermarket.chef.io/cookbooks/oracle-fmw&#34;&gt;Chef Supermarket&lt;/a&gt; and &lt;a href=&#34;https://github.com/jeqo/oracle-fmw&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>Book Review - Applied SOA Patterns on the Oracle Platform</title>
            <link>https://jeqo.github.io/post/2014-11-28-review-soa-patterns-oracle-platform/</link>
            <pubDate>Fri, 28 Nov 2014 00:00:00 UTC</pubDate>
            <author>Jorge Quilcate Otoya</author>
            <guid>https://jeqo.github.io/post/2014-11-28-review-soa-patterns-oracle-platform/</guid>
            <description>&lt;p&gt;I&amp;rsquo;ve had the opportunity to present a review of this book &lt;a href=&#34;https://www.packtpub.com/application-development/applied-soa-patterns-oracle-platform&#34;&gt;Applied SOA Patterns on the Oracle Platform&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Once I started to read the chapters, I found it quite interesting because of these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Great introduction to SOA  principles, and Oracle SOA Suite evolution&lt;/li&gt;
&lt;li&gt;Align AIA Concepts with SOA patterns&lt;/li&gt;
&lt;li&gt;A key topic for SOA success: Service Repository&lt;/li&gt;
&lt;li&gt;An extensive and complete description of Security and Error Handling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It looks like a really long book (572 pages), and it is. But this is justified because it takes a great approach from concepts to examples combined with experiences and source code. This could help you to feel more confident about your SOA design decisions.&lt;/p&gt;

&lt;h2 id=&#34;must-read-parts&#34;&gt;&amp;ldquo;Must Read&amp;rdquo; parts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 1 - SOA Frameworks&lt;/strong&gt;: I think these frameworks are quite important to apply on SOA design, for example: &lt;em&gt;Object and XML Modeling&lt;/em&gt;, if they are not designed well, could generate an implementation hell: huge and heavy data types, rare and indescribable names. Also gives an introduction to AIA that can give you a easy-to-learn guide about SOA layers, components, and common terms (Application Business Connector Services, Enterprise Business Flows and Services, and so on).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 2 - Oracle SOA Roadmap&lt;/strong&gt;: Owesome timeline about SOA Suite and related technologies. First time I found this information really well summarized. In general, this chapter makes a great technical specification about Oracle SOA Foundation: artifacts, technologies, code examples, specifications.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 3 - Oracle Enterprise Business Flow SOA Patterns&lt;/strong&gt;: Great distinction between BPEL and Mediator use cases, and I share the idea that telecommunications is a great industry to take examples about service orchestration.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 4&lt;/strong&gt;: This chapter contains really well explained tutorial: Implementing a basic Proxy on OSB is one of them, a Oracle E-Business Suite case turning a Message Broker into a Service Broker applying &amp;ldquo;Receive-Transform-Deliver&amp;rdquo; implementation pattern, and great examples about &amp;ldquo;VETRO&amp;rdquo; (or &amp;ldquo;VETO&amp;rdquo;) pattern on OSB: &lt;em&gt;Validate, Enrich, Transform and Operate&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 5&lt;/strong&gt;: A great &amp;ldquo;Getting-started&amp;rdquo; with SOA Governance using Oracle Enterprise Repository. &lt;em&gt;&amp;ldquo;Open standards for the SOA Taxonomy&amp;rdquo;, &amp;ldquo;Entity Types&amp;rdquo;&lt;/em&gt;, and &lt;em&gt;&amp;ldquo;Creating a lightweight taxonomy for dynamic service invocations&amp;rdquo;&lt;/em&gt; are definitely &lt;em&gt;must read&lt;/em&gt; parts: they include Service Discovery taxonomy, Entity relationships and how they impact in your architecture.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 6&lt;/strong&gt;: There is a note, on &amp;ldquo;Optimizing the Adapter Framework&amp;rdquo;, about SOAP and REST that you could find very interested, and I&amp;rsquo;m agree with it: &amp;ldquo;SOAP versus REST is a pointless discussion&amp;rdquo;. This is followed by a technical description of how to use different technologies like REST, JSON, EJB, DB Adapter, PL-SQL and Oracle XDK. &lt;em&gt;&amp;ldquo;After all, it doesn&amp;rsquo;t matter if it is modern or not, all that matters is if it works according to our principles or not. The color of the cat does not matter, as long as it catches the mice.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 7&lt;/strong&gt;:  &lt;em&gt;&amp;ldquo;Initial Analysis&amp;rdquo;&lt;/em&gt; including common SOA vulnerabilities and risks, and &lt;em&gt;&amp;ldquo;Risk mitigation design rules&amp;rdquo;&lt;/em&gt;, are all recommendations well explained and quite important in SOA projects.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 8&lt;/strong&gt; - Error-handling design rules is also a &amp;ldquo;must-read&amp;rdquo;: 15 rules related with OSB, BPEL, Enterprise Manager,  to follow and apply a right exception handling on your project. Follower by a technical approach first with JMX and SOA Composites.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chapter 9&lt;/strong&gt;: This chapter includes an nice summary about Event Processing followed by a practitioner approach to implement CEP with Oracle Event Processing. Also includes 3 more important topics: High Availability with Coherence (How to integrated with OSB and CEP),  Monitoring Business Services with Oracle BAM ( How to use it from BPEL, JMS and Web Service API), and finally SOA as a Cloud Foundation (that&amp;rsquo;s where 12&amp;rdquo;c&amp;rdquo; comes from).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In conclusion you will find in this book a bunch of real experience aligned with SOA patterns and a mix of principles, frameworks, technical issues and product mapping. I believe you will find it very useful. You can find it &lt;a href=&#34;http://bit.ly/1uqK9dq&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;For me, this book will be my new handbook for comming SOA projects (with &lt;a href=&#34;http://www.oracle.com/technetwork/topics/entarch/itso-165161.html&#34;&gt;IT Strategies from Oracle&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;If you have comments about this book, please share! :)&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
