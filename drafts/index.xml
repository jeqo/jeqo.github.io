<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on @jeqo</title>
    <link>https://jeqo.github.io/drafts/</link>
    <description>Recent content in Drafts on @jeqo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright @jeqo</copyright>
    <lastBuildDate>Sun, 31 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeqo.github.io/drafts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>KIP: Complementary support for headers in Kafka Streams</title>
      <link>https://jeqo.github.io/drafts/kip-complementary-support-headers-kafka-streams/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/drafts/kip-complementary-support-headers-kafka-streams/</guid>
      <description>Motivation Headers are transiently passed over a Kafka Streams topology. To act on them, Processor API has to be used since (KIP-244).
Although current support is useful for instrumentation, it becomes cumbersome to use headers for common Kafka Streams DSL operations (e.g filtering based on header value) as it require using some sort of Transformer implementation.
Related JIRA issues  https://issues.apache.org/jira/browse/KAFKA-7718  Proposed Changes  Include a new type, to map value and headers.</description>
    </item>
    
    <item>
      <title>KIP: Allow Kafka Streams State Stores to be iterated backwards</title>
      <link>https://jeqo.github.io/drafts/kip-617/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/drafts/kip-617/</guid>
      <description>Motivation Fetching range of records from Kafka Streams state stores comes with an iterator to traverse elements from oldest to newest, e.g ReadOnlyWindowStore#fetch(K key, long fromTime, long toTime) mentions:
 For each key, the iterator guarantees ordering of windows, starting from the oldest/earliest&amp;rdquo;
 Similar guarantees are provided on other fetch and range operations. But in the case of key ranges, there are some nuances regarding order:
 The returned iterator must be safe from {@link java.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jeqo.github.io/drafts/kip-move-streams-resetter-to-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/drafts/kip-move-streams-resetter-to-tools/</guid>
      <description>KIP: Move Streams Resetter Tool from core to tools module Motivation Proposed Changes Compatibilily, Deprecation, and Migration Plan </description>
    </item>
    
  </channel>
</rss>