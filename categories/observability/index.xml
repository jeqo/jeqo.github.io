<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Observability on @jeqo</title>
    <link>https://jeqo.github.io/categories/observability/</link>
    <description>Recent content in Observability on @jeqo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright @jeqo</copyright>
    <lastBuildDate>Thu, 28 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeqo.github.io/categories/observability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tracing Kafka applications</title>
      <link>https://jeqo.github.io/posts/2017-09-28-kafka-opentracing/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeqo.github.io/posts/2017-09-28-kafka-opentracing/</guid>
      <description>Tracing is one of the hardest time in integration or microservice development: knowing how a request impact your different components, and if your components have behave as expected.
This could be fairly easy if we have monolith where we have one database and with some queries or checking one log file you can validate everything went well.
Once you introduce distributed components and asynchronous communication this starts to get more complex and tedious.</description>
    </item>
    
  </channel>
</rss>